{
  "name": "ai-workflows-helper",
  "publisher": "GlobalMaxima",
  "repository": {
    "type": "git",
    "url": "https://github.com/global-maxima/ai-workflows-helper--vscode-extension"
  },
  "displayName": "AI workflow helper",
  "description": "Select files and copy their contents, diagnostics, and related dependencies into clipboard as a single text stream for use with language centric AI tools.",
  "icon": "images/logo_rounded.png",
  "version": "0.0.16",
  "engines": {
    "node": "20.13.1",
    "vscode": "^1.96.0"
  },
  "categories": [
    "Other"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "configuration": {
      "title": "AI Workflows Helper",
      "properties": {
        "ai-workflows-helper.maxDepth": {
          "type": "number",
          "default": 3,
          "minimum": 1,
          "maximum": 10,
          "description": "Maximum depth for dependency collection"
        },
        "ai-workflows-helper.excludePatterns": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [],
          "description": "Patterns to exclude from collection"
        },
        "ai-workflows-helper.gitignore.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable .gitignore support"
        },
        "ai-workflows-helper.gitignore.respectGlobalIgnore": {
          "type": "boolean",
          "default": true,
          "description": "Respect global .gitignore files"
        },
        "ai-workflows-helper.gitignore.respectNestedIgnores": {
          "type": "boolean",
          "default": true,
          "description": "Respect nested .gitignore files"
        },
        "ai-workflows-helper.gitignore.cacheTimeout": {
          "type": "number",
          "default": 5000,
          "minimum": 1000,
          "description": "Cache timeout in milliseconds"
        }
      }
    },
    "commands": [
      {
        "command": "ai-workflows-helper.copyAsTextStream",
        "title": "Copy as Text Stream"
      },
      {
        "command": "ai-workflows-helper.copyAsTextStreamWithDiagnostics",
        "title": "Copy as Text Stream with Diagnostics"
      },
      {
        "command": "ai-workflows-helper.copyDiagnosticsOnly",
        "title": "Copy Diagnostics Only"
      },
      {
        "command": "ai-workflows-helper.copyWithLocalDependencies",
        "title": "Copy with Local Dependencies"
      }
    ],
    "menus": {
      "explorer/context": [
        {
          "when": "resourceScheme == 'file'",
          "command": "ai-workflows-helper.copyAsTextStream",
          "group": "7_aihelper@1"
        },
        {
          "when": "resourceScheme == 'file'",
          "command": "ai-workflows-helper.copyAsTextStreamWithDiagnostics",
          "group": "7_aihelper@2"
        },
        {
          "when": "resourceScheme == 'file'",
          "command": "ai-workflows-helper.copyDiagnosticsOnly",
          "group": "7_aihelper@3"
        },
        {
          "when": "resourceScheme == 'file' && resourceExtname =~ /\\.(ts|rs)$/",
          "command": "ai-workflows-helper.copyWithLocalDependencies",
          "group": "7_aihelper@4"
        }
      ]
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "npm run check-types && npm run lint && node esbuild.js",
    "watch": "npm-run-all -p watch:*",
    "watch:esbuild": "node esbuild.js --watch",
    "watch:tsc": "tsc --noEmit --watch --project tsconfig.json",
    "package": "npm run check-types && npm run lint && node esbuild.js --production",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "clean": "node -e \"const fs=require('fs');if(fs.existsSync('out')){fs.rmSync('out',{recursive:true,force:true});fs.mkdirSync('out');}\"",
    "pretest": "npm run clean && npm run compile-tests && npm run compile && npm run lint",
    "check-types": "tsc --noEmit",
    "lint": "eslint src --ext ts",
    "test": "vscode-test"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.6",
    "@types/node": "20.x",
    "@types/vscode": "^1.96.0",
    "@typescript-eslint/eslint-plugin": "^7.7.1",
    "@typescript-eslint/parser": "^7.7.1",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.4.1",
    "esbuild": "^0.20.2",
    "eslint": "^8.57.0",
    "npm-run-all": "^4.1.5",
    "typescript": "5.5.4"
  },
  "dependencies": {
    "ignore": "^7.0.1"
  }
}